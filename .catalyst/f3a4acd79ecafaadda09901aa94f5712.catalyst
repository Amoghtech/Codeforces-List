{"title":"A1. Good Matrix Elements","contestId":"177","problemIndex":"A1","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>The Smart Beaver from ABBYY got hooked on square matrices. Now he is busy studying an <span class=\"tex-span\"><i>n</i>&#x2009;&#xD7;&#x2009;<i>n</i></span> size matrix, where <span class=\"tex-span\"><i>n</i></span> is odd. The Smart Beaver considers the following matrix elements good:  </p><ul> <li> Elements of the main diagonal.  </li><li> Elements of the secondary diagonal.  </li><li> Elements of the &quot;middle&quot; row &#x2014; the row which has exactly <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/55e8f30a55c1086f22e41e6036894dfd3c68d3a3.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> rows above it and the same number of rows below it.  </li><li> Elements of the &quot;middle&quot; column &#x2014; the column that has exactly <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/55e8f30a55c1086f22e41e6036894dfd3c68d3a3.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> columns to the left of it and the same number of columns to the right of it. </li></ul><p></p><p></p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/d97d5d0d20c81a6225574d6cf14041964615f693.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"> <span class=\"tex-font-size-script\"> The figure shows a <span class=\"tex-span\">5&#x2009;&#xD7;&#x2009;5</span> matrix.   The good elements are marked with green. </span> </center><p></p><p>Help the Smart Beaver count the sum of good elements of the given matrix.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line of input data contains a single odd integer <span class=\"tex-span\"><i>n</i></span>. Each of the next <span class=\"tex-span\"><i>n</i></span> lines contains <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>ij</i></sub></span> <span class=\"tex-span\">(0&#x2009;&#x2264;&#x2009;<i>a</i><sub class=\"lower-index\"><i>ij</i></sub>&#x2009;&#x2264;&#x2009;100)</span> separated by single spaces &#x2014; the elements of the given matrix.</p><p>The input limitations for getting 30 points are: </p><ul> <li> <span class=\"tex-span\">1&#x2009;&#x2264;&#x2009;<i>n</i>&#x2009;&#x2264;&#x2009;5</span> </li></ul><p></p><p>The input limitations for getting 100 points are:</p><p></p><ul> <li> <span class=\"tex-span\">1&#x2009;&#x2264;&#x2009;<i>n</i>&#x2009;&#x2264;&#x2009;101</span> </li></ul><p></p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>Print a single integer &#x2014; the sum of good matrix elements.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first sample all matrix elements will be good. Good elements in the second sample are shown on the figure.</p>","sampleTestcases":[{"id":1616845681665,"input":"3\n1 2 3\n4 5 6\n7 8 9\n","output":"45\n","result":{"id":1616845681665,"stdout":"45\r\n","stderr":"","exitcode":0,"signal":null,"time":548,"timeout":false}},{"id":1616845681666,"input":"5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n","output":"17\n","result":{"id":1616845681666,"stdout":"17\r\n","stderr":"","exitcode":0,"signal":null,"time":50,"timeout":false}}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++","langId":"54"}