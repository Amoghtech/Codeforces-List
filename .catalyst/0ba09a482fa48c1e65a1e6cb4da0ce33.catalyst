{"title":"A. Remove Smallest","contestId":"1399","problemIndex":"A","timeLimit":"1 second","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>You are given the array $$$a$$$ consisting of $$$n$$$ positive (greater than zero) integers.</p><p>In one move, you can choose two indices $$$i$$$ and $$$j$$$ ($$$i \\ne j$$$) such that the absolute difference between $$$a_i$$$ and $$$a_j$$$ is no more than one ($$$|a_i - a_j| \\le 1$$$) and remove the smallest of these two elements. If two elements are equal, you can remove any of them (but exactly one).</p><p>Your task is to find if it is possible to obtain the array consisting of <span class=\"tex-font-style-bf\">only one element</span> using several (possibly, zero) such moves or not.</p><p>You have to answer $$$t$$$ independent test cases.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) &#x2014; the number of test cases. Then $$$t$$$ test cases follow.</p><p>The first line of the test case contains one integer $$$n$$$ ($$$1 \\le n \\le 50$$$) &#x2014; the length of $$$a$$$. The second line of the test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 100$$$), where $$$a_i$$$ is the $$$i$$$-th element of $$$a$$$.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each test case, print the answer: &quot;<span class=\"tex-font-style-tt\">YES</span>&quot; if it is possible to obtain the array consisting of <span class=\"tex-font-style-bf\">only one element</span> using several (possibly, zero) moves described in the problem statement, or &quot;<span class=\"tex-font-style-tt\">NO</span>&quot; otherwise.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first test case of the example, we can perform the following sequence of moves:</p><p></p><ul> <li> choose $$$i=1$$$ and $$$j=3$$$ and remove $$$a_i$$$ (so $$$a$$$ becomes $$$[2; 2]$$$); </li><li> choose $$$i=1$$$ and $$$j=2$$$ and remove $$$a_j$$$ (so $$$a$$$ becomes $$$[2]$$$). </li></ul><p></p><p>In the second test case of the example, we can choose any possible $$$i$$$ and $$$j$$$ any move and it doesn&apos;t matter which element we remove.</p><p>In the third test case of the example, there is no way to get rid of $$$2$$$ and $$$4$$$.</p>","sampleTestcases":[{"id":1616900399999,"input":"5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n","output":"YES\nYES\nNO\nNO\nYES\n","result":{"id":1616900399999,"stdout":"YES\r\nYES\r\nNO\r\nNO\r\nYES\r\n","stderr":"","exitcode":0,"signal":null,"time":155,"timeout":false}}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++","langId":"54"}